import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image';
import {
  ApolloClient,
  InMemoryCache,
  gql
} from "@apollo/client";

import Header from '@components/Header';
import Container from '@components/Container';
import Button from '@components/Button';
import Layout from '@components/Layout';

import styles from '@styles/Product.module.scss'

type Product = {
  id: string;
  title: string;
  productPrice: number;
  productId: string;
  content: string;
  featuredImage: {
    altText: string;
    sourceUrl: string;
    mediaDetails: {
      width: number;
      height: number;
    }
  }
}
interface ProductPageProps {
  product: Product;
}

const ProductPage: NextPage<ProductPageProps> = ({ product }) => {
  return (
    <Layout>
      <Head>
        <title>{product.title}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Container>
        <div className={styles.productWrapper}>
          <div className={styles.productImage}>
            <Image
              src={product.featuredImage.sourceUrl}
              alt={product.featuredImage.altText}
              width={product.featuredImage.mediaDetails.width}
              height={product.featuredImage.mediaDetails.height}
              />
          </div>
          <div className={styles.productContent}>
            <h1>{product.title}</h1>
            <div dangerouslySetInnerHTML={{
              __html: product.content
            }} />
            <p className={styles.productPrice}>${product.productPrice}</p>
            <p>
              <Button
                className="snipcart-add-item"
                data-item-id={product.productId}
                data-item-price={product.productPrice}
                data-item-url="/"
                data-item-description=""
                data-item-image={product.featuredImage.sourceUrl}
                data-item-name={product.title}
              >
                Add to Cart
              </Button>
            </p>
          </div>
        </div>
      </Container>
    </Layout>
  )
}

export async function getStaticProps({ params }) {
  const { productSlug } = params;
  const client = new ApolloClient({
    uri: process.env.NEXT_PUBLIC_GRAPHQL_API,
    cache: new InMemoryCache()
  });

  const response = await client.query({
    query: gql`
      query ProductBySlug($slug: ID!) {
        product(id: $slug, idType:SLUG) {
          title
          content
          product {
            fieldGroupName
            productId
            productPrice
          }
          featuredImage {
            node {
              altText
              sourceUrl
              mediaDetails {
                height
                width
              }
            }
          }
        }
      }
    `,
    variables: {
      slug: productSlug
    }
  });

  const product = {
    ...response.data.product,
    ...response.data.product.product,
    productPrice: Number(response.data.product.product.productPrice),
    featuredImage: {
      ...response.data.product.featuredImage.node
    }
  }

  return {
    props: {
      product
    }
  }
}

export async function getStaticPaths() {
  const client = new ApolloClient({
    uri: process.env.NEXT_PUBLIC_GRAPHQL_API,
    cache: new InMemoryCache()
  });

  const response = await client.query({
    query: gql`
      query AllProducts {
        products {
          edges {
            node {
              id
              slug
            }
          }
        }
      }
    `
  });

  const paths = response.data.products.edges.map(({ node }) => {
    return {
      params: {
        productSlug: node.slug
      }
    }
  });

  return {
    paths,
    fallback: false
  }
}

export default ProductPage
